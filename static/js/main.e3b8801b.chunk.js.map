{"version":3,"sources":["components/PokemonRows.js","components/PokemonInfo.js","App.js","reportWebVitals.js","index.js"],"names":["PokemonRows","_ref","pokemonrow","onSelect","react_default","a","createElement","name","english","type","join","onClick","PokemonInfo","base","console","log","Object","keys","map","key","App","_useState","useState","_useState2","slicedToArray","filter","setFilter","_useState3","_useState4","pokemon","_useState5","_useState6","selectedItem","setSelectedItem","useEffect","style","margin","width","paddingTop","className","display","gridTemplateColumns","gridColumnGap","value","onChange","e","target","toLowerCase","includes","slice","components_PokemonRows","id","components_PokemonInfo","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"6LAceA,SAZK,SAAAC,GAA4B,IAA1BC,EAA0BD,EAA1BC,WAAYC,EAAcF,EAAdE,SAC9B,OACIC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAKJ,EAAWK,KAAKC,SACrBJ,EAAAC,EAAAC,cAAA,UAAKJ,EAAWO,KAAKC,KAAK,OAC1BN,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMR,EAASD,KAAhC,eCaDU,EAnBK,SAAAX,GAAkB,IAAhBM,EAAgBN,EAAhBM,KAAMM,EAAUZ,EAAVY,KAExB,OADAC,QAAQC,IAAIR,GAERH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKC,EAAKC,SACVJ,EAAAC,EAAAC,cAAA,aAEQU,OAAOC,KAAKJ,GAAMK,IAAI,SAAAC,GAAG,OACrBf,EAAAC,EAAAC,cAAA,MAAIa,IAAKA,GACLf,EAAAC,EAAAC,cAAA,UAAKa,GACLf,EAAAC,EAAAC,cAAA,UAAKO,EAAKM,UC+CvBC,MApDf,WAAe,IAAAC,EACaC,mBAAS,IADtBC,EAAAP,OAAAQ,EAAA,EAAAR,CAAAK,EAAA,GACPI,EADOF,EAAA,GACAG,EADAH,EAAA,GAAAI,EAEgBL,mBAAS,IAFzBM,EAAAZ,OAAAQ,EAAA,EAAAR,CAAAW,EAAA,GAEPE,EAFOD,EAAA,GAAAE,GAAAF,EAAA,GAG0BN,mBAAS,OAHnCS,EAAAf,OAAAQ,EAAA,EAAAR,CAAAc,EAAA,GAGPE,EAHOD,EAAA,GAGOE,EAHPF,EAAA,GAQZ,OAHFG,oBAAU,aAEP,CAACT,IAEHrB,EAAAC,EAAAC,cAAA,OACA6B,MAAO,CACNC,OAAQ,OACRC,MAAO,IACPC,WAAY,QAGZlC,EAAAC,EAAAC,cAAA,MAAIiC,UAAU,SAAd,kBACAnC,EAAAC,EAAAC,cAAA,OAAK6B,MAAO,CACXK,QAAQ,OACRC,oBAAoB,UACpBC,cAAe,SAEftC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,SAAOqC,MAAOlB,EAAQmB,SAAU,SAACC,GAAD,OAAOnB,EAAUmB,EAAEC,OAAOH,UAE1DvC,EAAAC,EAAAC,cAAA,SAAO+B,MAAM,QACZjC,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,oBAIFF,EAAAC,EAAAC,cAAA,aACEuB,EAAQJ,OAAO,SAACI,GAAD,OAAaA,EAAQtB,KAAKC,QAAQuC,cAAcC,SAASvB,EAAOsB,iBAAgBE,MAAM,EAAE,IAAI/B,IAAI,SAACW,GAAD,OAC/GzB,EAAAC,EAAAC,cAAC4C,EAAD,CACChD,WAAY2B,EACZV,IAAKU,EAAQsB,GACbhD,SAAU,SAAC0B,GAAD,OAAaI,EAAgBJ,WAK3CG,GACA5B,EAAAC,EAAAC,cAAC8C,EAAgBpB,MCvCPqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAX,EAAA,GAAAY,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAxD,GAAiD,IAA9C0D,EAA8C1D,EAA9C0D,OAAQC,EAAsC3D,EAAtC2D,OAAQC,EAA8B5D,EAA9B4D,OAAQC,EAAsB7D,EAAtB6D,OAAQC,EAAc9D,EAAd8D,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhE,EAAAC,EAAAC,cAACF,EAAAC,EAAMgE,WAAP,KACEjE,EAAAC,EAAAC,cAACgE,EAAD,QAOJjB","file":"static/js/main.e3b8801b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst PokemonRows = ({pokemonrow, onSelect}) => {\r\n    return (\r\n        <tr>\r\n            <td>{pokemonrow.name.english}</td>\r\n            <td>{pokemonrow.type.join(', ')}</td>\r\n            <td>\r\n                <button onClick={() => onSelect(pokemonrow)}>Select!</button>    \r\n            </td>\r\n        </tr>\r\n    )   \r\n}\r\n\r\nexport default PokemonRows;","import React from \"react\";\r\n\r\nconst PokemonInfo = ({name, base}) => {\r\n    console.log(name);\r\n    return (\r\n        <div>\r\n            <h1>{name.english}</h1>\r\n            <table>\r\n                {\r\n                    Object.keys(base).map(key => (\r\n                        <tr key={key}>\r\n                            <td>{key}</td>\r\n                            <td>{base[key]}</td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </table>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default PokemonInfo;","import React, {useState, useEffect} from \"react\";\n\n\nimport \"./App.css\";\nimport PokemonRows from \"./components/PokemonRows\";\nimport PokemonInfo from \"./components/PokemonInfo\";\n\nfunction App() {\n\tconst [filter,setFilter] = useState(\"\");\n\tconst [pokemon, setPokemon] = useState([]);\t\n\tconst [selectedItem, setSelectedItem] = useState(null);\t\n\n\tuseEffect(() => {\n\n\t}, [filter]) \n  \treturn (\n\t\t<div\n\t\tstyle={{\n\t\t\tmargin: \"auto\",\n\t\t\twidth: 800,\n\t\t\tpaddingTop: \"1em\",\n\t\t}}\n\t\t>\n\t\t\t<h1 className=\"title\">Pokemon Search</h1>\n\t\t\t<div style={{\n\t\t\t\tdisplay:\"grid\",\n\t\t\t\tgridTemplateColumns:\"70% 30%\",\n\t\t\t\tgridColumnGap: \"1rem\"\n\t\t\t}}>\n\t\t\t\t<div>\n\t\t\t\t\t<input value={filter} onChange={(e) => setFilter(e.target.value) }/>\n\t\t\t\t\n\t\t\t\t\t<table width=\"100%\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t\t<th>Type</th>\n\t\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{pokemon.filter((pokemon) => pokemon.name.english.toLowerCase().includes(filter.toLowerCase())).slice(0,10).map((pokemon) => (\n\t\t\t\t\t\t\t\t<PokemonRows \n\t\t\t\t\t\t\t\t\tpokemonrow={pokemon} \n\t\t\t\t\t\t\t\t\tkey={pokemon.id}\n\t\t\t\t\t\t\t\t\tonSelect={(pokemon) => setSelectedItem(pokemon) } />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t\t{selectedItem && (\n\t\t\t\t\t<PokemonInfo {...selectedItem}/>\n\t\t\t\t)}\n\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n  \t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}